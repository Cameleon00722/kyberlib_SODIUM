// Copyright Â© 2023 KyberLib. All rights reserved.
// SPDX-License-Identifier: Apache-2.0 OR MIT

// Constants and parameters used in the Kyber cryptographic scheme.

/// Enables or disables 90's mode in the Kyber cryptographic scheme.
///
/// - In 90's mode, the default cryptographic primitives are replaced with AES-CTR and SHA2,
/// potentially offering faster performance on certain hardware platforms.
/// - To enable 90's mode, set the `features = ["90s"]` flag in your Cargo.toml file.
/// - By default, this mode is disabled.
pub const KYBER_90S: bool = cfg!(feature = "90s");

/// The noise parameter eta1, used in the Kyber512 variant of the scheme.
///
/// - Determines the distribution of the noise in the cryptographic algorithm.
/// - The value is set to 3 for Kyber512 and 2 for other variants.
pub const KYBER_ETA1: usize = if cfg!(feature = "kyber512") { 3 } else { 2 };

/// The noise parameter eta2, universally used across different Kyber variants.
///
/// - It determines the noise distribution's width in the encryption process.
pub const KYBER_ETA2: usize = 2;

/// The parameter N, representing the degree of the polynomial used in Kyber.
///
/// - This constant is a fundamental part of the scheme's structure.
pub const KYBER_N: usize = 256;

/// The size in bytes of the polynomials used in Kyber, derived from the parameter N.
pub const KYBER_POLYBYTES: usize = 384;

/// Compressed byte size of the polynomial for Kyber variants except Kyber1024.
///
/// - Determines how data is compacted when not using Kyber1024.
#[cfg(not(feature = "kyber1024"))]
pub const KYBER_POLYCOMPRESSEDBYTES: usize = 128;

/// The byte size of the vector of polynomials in Kyber, calculated from the security parameter and KYBER_POLYBYTES.
pub const KYBER_POLYVECBYTES: usize = KYBER_SECURITY_PARAMETER * KYBER_POLYBYTES;

/// Compressed byte size of the polynomial vector for Kyber variants except Kyber1024.
///
/// - This setting affects data compression in non-Kyber1024 configurations.
#[cfg(not(feature = "kyber1024"))]
pub const KYBER_POLYVECCOMPRESSEDBYTES: usize = KYBER_SECURITY_PARAMETER * 320;

/// The modulus Q used in the Kyber scheme.
///
/// - It plays a critical role in the polynomial arithmetic of the scheme.
pub const KYBER_Q: usize = 3329;

/// Size in bytes of a secret key in the Kyber KEM.
///
/// - It is computed as the sum of IND-CPA secret key and public key sizes, along with twice the size of symmetric keys.
/// - This size is crucial for memory allocation during key generation and storage.
pub const KYBER_SECRET_KEY_BYTES: usize = KYBER_INDCPA_SECRETKEYBYTES + KYBER_INDCPA_PUBLICKEYBYTES + 2 * KYBER_SYM_BYTES;

/// The security parameter for Kyber, affecting the overall security level.
///
/// It influences the length of the shared secret and computational complexity.
///
/// The parameter can be set to different values to balance between security and performance:
/// - Kyber-512 for AES-128 equivalent security (value = 2).
/// - Kyber-768 for AES-192 equivalent security (value = 3, default).
/// - Kyber-1024 for AES-256 equivalent security (value = 4).
/// For more details, refer to the Kyber documentation: <https://pq-crystals.org/kyber/>
pub const KYBER_SECURITY_PARAMETER: usize = if cfg!(feature = "kyber512") {
    2
} else if cfg!(feature = "kyber1024") {
    4
} else {
    3
};

/// Size in bytes of shared secrets generated by Kyber KEM.
///
/// - This size is pivotal for ensuring the security and efficiency of the cryptographic process.
pub const KYBER_SHARED_SECRET_BYTES: usize = 32;

/// The size in bytes of symmetric keys, hash values, and RNG seeds in Kyber.
///
/// - This constant is critical for maintaining the integrity and compatibility of cryptographic operations within the scheme.
pub const KYBER_SYM_BYTES: usize = 32;

/// Compressed byte size of the polynomial for Kyber1024.
///
/// - It determines the efficiency of data compression in Kyber1024.
#[cfg(feature = "kyber1024")]
pub const KYBER_POLYCOMPRESSEDBYTES: usize = 160;

/// Compressed byte size of the polynomial vector for Kyber1024.
///
/// - Affects how polynomial vector data is compressed in the Kyber1024 variant.
#[cfg(feature = "kyber1024")]
pub const KYBER_POLYVECCOMPRESSEDBYTES: usize = KYBER_SECURITY_PARAMETER * 352;

/// Byte size of the IND-CPA public key in Kyber.
///
/// - This constant is used to allocate memory for storing and transmitting public keys.
pub const KYBER_INDCPA_PUBLICKEYBYTES: usize = KYBER_POLYVECBYTES + KYBER_SYM_BYTES;

/// Byte size of the IND-CPA secret key in Kyber.
///
/// - This size is essential for understanding the memory requirements for secure key storage.
pub const KYBER_INDCPA_SECRETKEYBYTES: usize = KYBER_POLYVECBYTES;

/// Total byte size of the IND-CPA data in Kyber.
///
/// - It includes the sizes of compressed polynomial vectors and compressed polynomials.
pub const KYBER_INDCPA_BYTES: usize = KYBER_POLYVECCOMPRESSEDBYTES + KYBER_POLYCOMPRESSEDBYTES;

/// Size in bytes of a public key in Kyber KEM.
///
/// - This size is vital for memory allocation when handling public keys.
pub const KYBER_PUBLIC_KEY_BYTES: usize = KYBER_INDCPA_PUBLICKEYBYTES;

/// Size in bytes of a ciphertext in Kyber KEM.
///
/// - This size dictates the memory requirements for storing and transmitting encrypted data.
pub const KYBER_CIPHERTEXT_BYTES: usize = KYBER_INDCPA_BYTES;
